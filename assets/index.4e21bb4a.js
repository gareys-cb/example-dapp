import{b as I,p as N,u as S,W as A,a as m,c as E,r as c,j as b,R as k,d as y}from"./vendor.0031c8e4.js";const O=function(){const r=document.createElement("link").relList;if(r&&r.supports&&r.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const o of n)if(o.type==="childList")for(const s of o.addedNodes)s.tagName==="LINK"&&s.rel==="modulepreload"&&i(s)}).observe(document,{childList:!0,subtree:!0});function e(n){const o={};return n.integrity&&(o.integrity=n.integrity),n.referrerpolicy&&(o.referrerPolicy=n.referrerpolicy),n.crossorigin==="use-credentials"?o.credentials="include":n.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function i(n){if(n.ep)return;n.ep=!0;const o=e(n);fetch(n.href,o)}};O();window.Buffer=I.Buffer;window.process=N;window.util=S;var x="./assets/padlock.3a1fe527.png",W="./assets/padlock_open.c4541ffd.png";const v="YOUR_INFURA_PROJECT_ID",_="Sesame",M="https://gareys-cb.github.io/sesame/assets/padlock.png",R=`https://mainnet.infura.io/v3/${v}`,P=1,U=t=>t.makeWeb3Provider(R,P),D=async()=>{var o,s,u;const t=(u=(s=(o=window.ethereum)==null?void 0:o.providers)==null?void 0:s.find(w=>!!w.isCoinbaseWallet))!=null?u:window.ethereum,r=new A({appName:_,appLogoUrl:M,darkMode:!1}),e=U(r),i=new m(e);(!t||!t.isCoinbaseWallet)&&console.info("NO COINBASE WALLET FOUND - USING WALLETLINK SDK PROVIDER");const n=await e.enable();return{provider:e,web3:i,accounts:n}},T=async()=>{var i,n,o;const t=(o=(n=(i=window.ethereum)==null?void 0:i.providers)==null?void 0:n.find(s=>!!s.isMetaMask))!=null?o:window.ethereum;if(!t||!t.isMetaMask||!window.ethereum)throw window.open("https://metamask.io/download.html","_blank"),new Error("NO METAMASK WALLET FOUND!");const r=new m(window.ethereum),e=await t.request({method:"eth_requestAccounts"});return{provider:t,web3:r,accounts:e}},F="YOUR_INFURA_PROJECT_ID",B=async()=>new Promise(async(t,r)=>{const e=new E({infuraId:F}),i=new m(e);let n=!0;const o=()=>n,s=()=>{!o()||(console.log("WALLET CONNECT DISCONNECTED"),r())};e.connector.on("disconnect",s);try{const u=await e.enable();n=!1,t({provider:e,web3:i,accounts:u})}catch{r()}}),j=async t=>{switch(t){case"walletlink":return D();case"metamask":return T();case"walletconnect":return B();default:if(!window.ethereum)throw new Error("NO WALLET FOUND!");return{provider:window.ethereum,web3:new m(window.ethereum),accounts:[]}}},f="web3-provider",h=window.localStorage.getItem(f),K=()=>{const[t,r]=c.exports.useState(),[e,i]=c.exports.useState(),[n,o]=c.exports.useState(),s=c.exports.useCallback(()=>{if(localStorage.removeItem(f),i(void 0),r(void 0),o(void 0),e==null?void 0:e.isCoinbaseWallet){e==null||e.close();return}(e==null?void 0:e.isWalletConnect)&&(e==null||e.disconnect())},[e]),u=c.exports.useCallback(async a=>{try{const{provider:d,web3:L,accounts:C}=await j(a);localStorage.setItem(f,a),i(d),r(L),o(C[0])}catch{console.warn("FAILED TO SIGN IN!"),s()}},[s]),w=c.exports.useCallback(async()=>{try{if(!n||!t)throw new Error("NO ACCOUNT AVAILABLE");const a=await t.eth.personal.sign("Open Sesame!",n,"");console.info(a)}catch(a){console.warn(a)}},[t,n]);return c.exports.useEffect(()=>{const a=d=>{if(!d.length){s();return}o(d[0])};return e==null||e.on("accountsChanged",a),()=>{e==null||e.removeListener("accountsChanged",a)}},[e,s]),c.exports.useEffect(()=>{if(!(e==null?void 0:e.isWalletConnect))return;const a=()=>{s()};return e==null||e.on("disconnect",a),()=>{e==null||e.removeListener("disconnect",a)}},[e,s]),c.exports.useEffect(()=>{if(!(e==null?void 0:e.isCoinbaseWallet))return;const a=()=>{localStorage.getItem("-walletlink:https://www.walletlink.org:version")||localStorage.removeItem(f)};return addEventListener("beforeunload",a,{capture:!0}),()=>{removeEventListener("beforeunload",a)}},[e]),c.exports.useEffect(()=>{h&&u(h).catch(s)},[]),{login:u,logout:s,account:n,web3:t,signMessage:w}},l=b.exports.jsx,g=b.exports.jsxs,p=({providerString:t,handleLogin:r,text:e})=>l("button",{type:"button",onClick:()=>r(t),children:e}),q=c.exports.memo(({handleLogin:t})=>g("div",{className:"content",children:[l("p",{children:"Sign in with your wallet"}),l(p,{providerString:"walletlink",handleLogin:t,text:"Coinbase Wallet"}),l(p,{providerString:"metamask",handleLogin:t,text:"MetaMask"}),l(p,{providerString:"walletconnect",handleLogin:t,text:"WalletConnect"})]})),G=c.exports.memo(({account:t,handleSignMessage:r,handleLogout:e})=>g("div",{className:"content",children:[l("p",{children:"Open Sesame!"}),g("small",{children:["Signed into account: ",t]}),l("button",{type:"button",onClick:r,children:"Sign Message"}),l("button",{className:"signout",type:"button",onClick:e,children:"Sign out"})]}));function J(){const{login:t,logout:r,account:e,web3:i,signMessage:n}=K(),[o,s]=c.exports.useState(!!h),u=!!i,w=c.exports.useCallback(async d=>{s(!0),await t(d).finally(()=>{s(!1)})},[t]),a=c.exports.useCallback(()=>{s(!0),r(),s(!1)},[r]);return g("div",{className:"App",children:[l("h1",{children:"Sesame"}),l("img",{src:u?W:x,className:"App-logo",alt:"logo"}),o?l("p",{children:"loading..."}):g("div",{children:[!u&&l(q,{handleLogin:w}),u&&l(G,{handleLogout:a,handleSignMessage:n,account:e})]})]})}k.render(l(y.StrictMode,{children:l(J,{})}),document.getElementById("root"));
