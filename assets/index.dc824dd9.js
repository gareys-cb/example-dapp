import{b as P,p as E,u as M,C as I,W as h,a as N,r,j as C,R as W,c as O}from"./vendor.2e00e048.js";const _=function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))a(o);new MutationObserver(o=>{for(const s of o)if(s.type==="childList")for(const c of s.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&a(c)}).observe(document,{childList:!0,subtree:!0});function e(o){const s={};return o.integrity&&(s.integrity=o.integrity),o.referrerpolicy&&(s.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?s.credentials="include":o.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function a(o){if(o.ep)return;o.ep=!0;const s=e(o);fetch(o.href,s)}};_();window.Buffer=P.Buffer;window.process=E;window.util=M;var R="./assets/padlock.3a1fe527.png",U="./assets/padlock_open.c4541ffd.png";const x="YOUR_INFURA_PROJECT_ID",D="Sesame",F="https://gareys-cb.github.io/sesame/assets/padlock.png",T=`https://mainnet.infura.io/v3/${x}`,j=1,L=()=>new I({appName:D,appLogoUrl:F,darkMode:!1,overrideIsMetaMask:!1}).makeWeb3Provider(T,j),q=async()=>{const t=L(),n=new h(t),e=await t.request({method:"eth_requestAccounts"});return{provider:t,web3:n,accounts:e}},S=()=>{var t,n,e;return(e=(n=(t=window.ethereum)==null?void 0:t.providers)==null?void 0:n.find(a=>!!a.isMetaMask))!=null?e:window.ethereum},B=async()=>{const t=S();if(!t||!t.isMetaMask||!window.ethereum)throw window.open("https://metamask.io/download.html","_blank"),new Error("NO METAMASK WALLET FOUND!");const n=new h(t),e=await t.request({method:"eth_requestAccounts"});return{provider:t,web3:n,accounts:e}},y=()=>new N({infuraId:x}),K=async()=>new Promise(async(t,n)=>{const e=y(),a=new h(e);let o=!0;const s=()=>o,c=()=>{s()&&n()};e.connector.on("disconnect",c);try{const u=await e.enable();o=!1,t({provider:e,web3:a,accounts:u})}catch{n()}}),G=async t=>{switch(t){case"coinbase":return q();case"metamask":return B();case"walletconnect":return K();default:if(!window.ethereum)throw new Error("NO WALLET FOUND!");return{provider:window.ethereum,web3:new h(window.ethereum),accounts:[]}}},f="web3-provider",J=()=>{const[t,n]=r.exports.useState(),[e,a]=r.exports.useState(),[o,s]=r.exports.useState(),[c,u]=r.exports.useState(window.localStorage.getItem(f)),l=r.exports.useCallback(()=>{localStorage.removeItem(f),a(void 0),n(void 0),s(void 0)},[e]),m=r.exports.useCallback(async d=>{try{const{provider:w,web3:k,accounts:A}=await G(d);localStorage.setItem(f,d),a(w),n(k),s(A[0])}catch{console.warn("FAILED TO SIGN IN!"),l()}},[l]);return r.exports.useEffect(()=>{u(window.localStorage.getItem(f))},[e]),r.exports.useEffect(()=>{const d=w=>{if(!w.length){l();return}s(w[0])};return e==null||e.on("accountsChanged",d),()=>{e==null||e.removeListener("accountsChanged",d)}},[e,l]),r.exports.useEffect(()=>{const d=()=>{l()};return e==null||e.on("disconnect",d),()=>{e==null||e.removeListener("disconnect",d)}},[e,l]),r.exports.useEffect(()=>{if(c!=="coinbase"){removeEventListener("beforeunload",g);return}return addEventListener("beforeunload",g),()=>{removeEventListener("beforeunload",g)}},[c]),r.exports.useEffect(()=>{c&&m(c).catch(l)},[]),{providerString:c,connectProvider:m,changeProvider:l,account:o,web3:t}},g=()=>{localStorage.getItem("-walletlink:https://www.walletlink.org:version")||localStorage.removeItem(f)},i=C.exports.jsx,p=C.exports.jsxs,v=r.exports.memo(({providerString:t,handleConnect:n,connected:e,text:a})=>p("button",{type:"button",onClick:()=>n(t),children:[a," ",e?"\u{1F7E2}":"\u{1F534}"]})),Y=r.exports.memo(({handleConnect:t})=>p("div",{className:"content",children:[i("p",{children:"Connect your wallet"}),i(v,{providerString:"coinbase",handleConnect:t,connected:b("coinbase"),text:"Coinbase Wallet"}),i(v,{providerString:"metamask",handleConnect:t,connected:b("metamask"),text:"MetaMask"}),i(v,{providerString:"walletconnect",handleConnect:t,connected:b("walletconnect"),text:"WalletConnect"})]}));function b(t){switch(t){case"coinbase":return!!L().selectedAddress;case"metamask":{const n=S();return n&&n.isMetaMask&&!n.isCoinbaseWallet&&!!n.selectedAddress}case"walletconnect":return y().wc.connected}}const $=r.exports.memo(({account:t,web3:n,providerString:e,handleLogout:a})=>p("div",{className:"content",children:[i("p",{children:"Open Sesame!"}),p("small",{children:["Selected account: ",t]}),i("button",{type:"button",onClick:()=>H({web3:n,account:t}),children:"Sign Message"}),i("button",{className:"change-provider",type:"button",onClick:a,children:"Change Provider"}),p("small",{children:["Connected via ",e]})]})),H=async({web3:t,account:n})=>{try{if(!n||!t)throw new Error("NO ACCOUNT AVAILABLE");const e=await t.eth.personal.sign("Open Sesame!",n,"");console.info(e)}catch(e){console.warn(e)}};function V(){const{connectProvider:t,changeProvider:n,providerString:e,account:a,web3:o}=J(),[s,c]=r.exports.useState(!!e),u=!!a&&!!o;r.exports.useEffect(()=>{u&&s&&c(!1)},[u,s]);const l=r.exports.useCallback(async d=>{c(!0),await t(d).finally(()=>{c(!1)})},[t]),m=r.exports.useCallback(()=>{c(!0),n(),c(!1)},[n]);return p("div",{className:"App",children:[i("h1",{children:"Sesame"}),i("img",{src:u?U:R,className:"App-logo",alt:"logo"}),s?i("p",{children:"loading..."}):p("div",{children:[!u&&i(Y,{handleConnect:l}),u&&i($,{web3:o,account:a,providerString:e,handleLogout:m})]})]})}W.render(i(O.StrictMode,{children:i(V,{})}),document.getElementById("root"));
